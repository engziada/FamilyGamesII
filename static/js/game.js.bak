// Socket.IO connection
const socket = io();
let gameId = null;
let playerName = null;
let isHost = false;
let timerInterval;

// DOM Elements
const gameStatus = document.getElementById('game-status');
const itemDisplay = document.getElementById('item-display');
const playersList = document.getElementById('players-list');
const scoresDiv = document.getElementById('scores');

// Initialize game when DOM loads
document.addEventListener('DOMContentLoaded', () => {
    gameId = document.getElementById('game-id').value;
    playerName = document.getElementById('player-name').value;
    isHost = document.getElementById('is-host').value === 'true';
    
    initializePlayers();
    initializeSocketEvents();
});

// Initialize players on load
function initializePlayers() {
    // Initialize scores on load
    const players = playersList.children;
    const initialScores = {};
    for (let i = 0; i < players.length; i++) {
        const playerName = players[i].textContent.trim().replace(' (اللعيب الكبير)', '');
        initialScores[playerName] = 0;
    }
    updateScores(initialScores);
}

// Initialize socket events
function initializeSocketEvents() {
    // Connection status handling
    socket.on('connect', () => {
        console.log('Connected to game server');
        gameStatus.textContent = 'متصل';
    });

    socket.on('disconnect', () => {
        console.log('Disconnected from game server');
        gameStatus.textContent = 'غير متصل';
    });

    // Game event handlers
    socket.on('game_state', (data) => {
        console.log('Game state update:', data);
        updateGameState(data);
    });

    socket.on('player_list', (data) => {
        console.log('Player list update:', data);
        updatePlayerList(data.players);
    });

    socket.on('score_update', (data) => {
        console.log('Score update:', data);
        updateScores(data.scores);
    });

    socket.on('game_error', (error) => {
        console.error('Game error:', error);
        gameStatus.textContent = error.message;
    });
}

// Game state update functions
function updateGameState(data) {
    const gameContent = document.getElementById('game-content');
    const gameControls = document.getElementById('game-controls');
    
    // Update game content based on state
    if (data.state === 'waiting') {
        gameContent.innerHTML = '<h2>في انتظار بدء اللعبة...</h2>';
    } else if (data.state === 'playing') {
        // Update game UI based on game type and role
        if (data.currentPlayer === playerName) {
            gameContent.innerHTML = `<h2>دورك يا ${playerName}!</h2>`;
        } else {
            gameContent.innerHTML = `<h2>دور ${data.currentPlayer}</h2>`;
        }
    }
}

function updatePlayerList(players) {
    playersList.innerHTML = players.map(player => 
        `<li>${player.name}${player.isHost ? ' (اللعيب الكبير)' : ''}</li>`
    ).join('');
}

function updateScores(scores) {
    scoresDiv.style.display = 'block'; // Ensure visibility
    scoresDiv.innerHTML = Object.entries(scores)
        .map(([name, score]) => `<li class='score-item'>${name}: ${score}</li>`)
        .join('');
}
